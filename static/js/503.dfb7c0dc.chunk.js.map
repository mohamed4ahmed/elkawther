{"version":3,"file":"static/js/503.dfb7c0dc.chunk.js","mappings":"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","sources":["api/index.js","containers/SinglePost/SinglePost.jsx"],"sourcesContent":["import sanityClient from \"../client\";\r\n\r\nexport const fetchAboutData = async () => {\r\n\treturn await sanityClient\r\n\t\t.fetch(\r\n\t\t\t`*[_type == \"about\"]{\r\n\t\t\ttitle,\r\n\t\t\tbody,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n\t\t)\r\n\t\t.then((data) => {\r\n\t\t\treturn data[0];\r\n\t\t})\r\n\t\t.catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchBlogData = async () => {\r\n\treturn await sanityClient\r\n\t\t.fetch(\r\n\t\t\t`*[_type == \"post\"]{\r\n\t\t\t\ttitle,\r\n\t\t\t\tslug,\r\n\t\t\t\tauthor,\r\n\t\t\t\tmainImage{\r\n\t\t\t\t\tasset->{\r\n\t\t\t\t\t\t_id,\r\n\t\t\t\t\t\turl\r\n\t\t\t\t\t},\r\n\t\t\t\t\talt\r\n\t\t\t\t},\r\n\t\t\t\tbody,\r\n\t\t\t\tpublishedAt,\r\n\t\t\t\tdescription\r\n\t\t\t}`\r\n\t\t)\r\n\t\t.then((data) => {\r\n\t\t\treturn data;\r\n\t\t})\r\n\t\t.catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchInstaPost = async () => {\r\n\treturn await sanityClient\r\n\t\t.fetch(\r\n\t\t\t`*[_type == \"insta\"]{\r\n\t\t\tpublishedAt,\r\n\t\t\turl,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n\t\t)\r\n\t\t.then((data) => {\r\n\t\t\treturn data;\r\n\t\t})\r\n\t\t.catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchHeroData = async () => {\r\n\treturn await sanityClient\r\n\t\t.fetch(\r\n\t\t\t`*[_type == \"hero\"]{\r\n\t\t\ttitle,\r\n\t\t\tsubTitle,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n\t\t)\r\n\t\t.then((data) => {\r\n\t\t\treturn data;\r\n\t\t})\r\n\t\t.catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchProduct = async () => {\r\n\treturn await sanityClient\r\n\t\t.fetch(\r\n\t\t\t`*[_type == \"product\"]{\r\n\t\t\ttitle,\r\n\t\t\tslug,\r\n\t\t\tprojectType,\r\n\t\t\tspecial,\r\n\t\t\tnew,\r\n\t\t\tbestSeller,\r\n\t\t\tprice,\r\n\t\t\tbody,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n\t\t)\r\n\t\t.then((data) => {\r\n\t\t\treturn data;\r\n\t\t})\r\n\t\t.catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchHeroProduct = async () => {\r\n\treturn await sanityClient\r\n\t\t.fetch(\r\n\t\t\t`*[_type == \"heroProduct\"]{\r\n\t\t\ttitle,\r\n\t\t\tsubTitle,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n\t\t)\r\n\t\t.then((data) => {\r\n\t\t\treturn data;\r\n\t\t})\r\n\t\t.catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchHeroBlog = async () => {\r\n\treturn await sanityClient\r\n\t\t.fetch(\r\n\t\t\t`*[_type == \"heroBlog\"]{\r\n\t\t\ttitle,\r\n\t\t\tsubTitle,\r\n\t\t\tmainImage{\r\n\t\t\t\tasset->{\r\n\t\t\t\t\t_id,\r\n\t\t\t\t\turl\r\n\t\t\t\t},\r\n\t\t\t\talt\r\n\t\t\t}\r\n\t\t}`\r\n\t\t)\r\n\t\t.then((data) => {\r\n\t\t\treturn data;\r\n\t\t})\r\n\t\t.catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchSinglePost = async (slug) => {\r\n\treturn await sanityClient\r\n\t\t.fetch(\r\n\t\t\t`*[slug.current == \"${slug}\"]{\r\n\t\t\t\ttitle,\r\n\t\t\t\tslug,\r\n\t\t\t\tmainImage{\r\n\t\t\t\t\tasset->{\r\n\t\t\t\t\t\t_id,\r\n\t\t\t\t\t\turl\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tbody,\r\n\t\t\t\t\"name\": author->name,\r\n\t\t\t\t\"authorImage\": author->image,\r\n\t\t\t\tpublishedAt\r\n\t\t\t}`\r\n\t\t)\r\n\t\t.then((data) => {\r\n\t\t\treturn data;\r\n\t\t})\r\n\t\t.catch((error) => console.log(\"error\", error));\r\n};\r\n\r\nexport const fetchSingleProduct = async (slug) => {\r\n\treturn await sanityClient\r\n\t\t.fetch(\r\n\t\t\t`*[slug.current == \"${slug}\"]{\r\n\t\t\t\ttitle,\r\n\t\t\t\tslug,\r\n\t\t\t\tmainImage{\r\n\t\t\t\t\tasset->{\r\n\t\t\t\t\t\t_id,\r\n\t\t\t\t\t\turl\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tbody,\r\n\t\t\t\tprojectType,\r\n\t\t\t\tspecial,\r\n\t\t\t\tnew,\r\n\t\t\t\tbestSeller,\r\n\t\t\t\tprice\r\n\t\t\t}`\r\n\t\t)\r\n\t\t.then((data) => {\r\n\t\t\treturn data;\r\n\t\t})\r\n\t\t.catch((error) => console.log(\"error\", error));\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchBlogData, fetchSinglePost } from \"../../api\";\r\nimport { setPosts } from \"../../app/slice/fetchApi\";\r\nimport { SinglePost, SpinnerBook } from \"../../components\";\r\n\r\nconst SinglePostContainer = () => {\r\n  const [singlePost, setSinglePost] = useState(null);\r\n  const [spinner, setSpinner] = useState(true);\r\n\r\n  const posts = useSelector((state) => state.api.posts);\r\n\r\n  const recentPosts = posts ? posts.slice(0, 3) : null;\r\n\r\n  const { slug } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setSpinner(false);\r\n    }, 2300);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchSinglePost(slug)\r\n      .then((data) => {\r\n        setSinglePost(data[0]);\r\n      })\r\n      .catch((error) => console.log(\"error: \", error));\r\n  }, [slug]);\r\n\r\n  useEffect(() => {\r\n    if (!posts) {\r\n      fetchBlogData()\r\n        .then((posts) => {\r\n          let postSort = [];\r\n          postSort = posts.slice().sort((value1, value2) => {\r\n            const dateValue1 = new Date(value1.publishedAt).getTime();\r\n            const dateValue2 = new Date(value2.publishedAt).getTime();\r\n            return dateValue1 < dateValue2 ? 1 : -1;\r\n          });\r\n          const action = setPosts(postSort);\r\n          dispatch(action);\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  }, [dispatch, posts]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {spinner ? (\r\n        <SpinnerBook />\r\n      ) : (\r\n        <SinglePost post={singlePost} recentPosts={recentPosts} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SinglePostContainer;\r\n"],"names":["fetchAboutData","sanityClient","then","data","catch","error","console","log","fetchBlogData","fetchInstaPost","fetchHeroData","fetchProduct","fetchHeroProduct","fetchHeroBlog","fetchSinglePost","slug","fetchSingleProduct","useState","singlePost","setSinglePost","spinner","setSpinner","posts","useSelector","state","api","recentPosts","slice","useParams","dispatch","useDispatch","useEffect","setTimeout","postSort","sort","value1","value2","Date","publishedAt","getTime","action","setPosts","className","post"],"sourceRoot":""}